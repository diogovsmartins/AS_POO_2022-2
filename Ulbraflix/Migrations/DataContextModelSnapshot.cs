// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ulbraflix.data.context;

#nullable disable

namespace Ulbraflix.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "subscription_enum", new[] { "unsubscribed", "monthly", "annualy" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ulbraflix.domain.entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("name");

                    b.Property<int?>("TitleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<int>("LastMinuteWatched")
                        .HasColumnType("integer")
                        .HasColumnName("last_minute_watched");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("integer");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("sinopsis");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("episode", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("RatingValue")
                        .HasColumnType("real")
                        .HasColumnName("rating_value");

                    b.HasKey("Id");

                    b.ToTable("rating", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("SerieId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SerieId");

                    b.ToTable("season", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("IsActive")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("is_active");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("payment_method");

                    b.Property<decimal>("PaymentValue")
                        .HasColumnType("numeric")
                        .HasColumnName("payment_value");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subscription_type");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("subscription", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("IsWatched")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("is_watched");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("RatingId")
                        .HasColumnType("integer");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("sinopsis");

                    b.Property<int?>("WatchHistoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.HasIndex("WatchHistoryId");

                    b.ToTable("title", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("integer");

                    b.Property<int>("WatchHistoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("WatchHistoryId");

                    b.ToTable("user_profile", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.WatchHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("watch_history", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Movie", b =>
                {
                    b.HasBaseType("Ulbraflix.domain.entities.Title");

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<int>("LastMinuteWatched")
                        .HasColumnType("integer")
                        .HasColumnName("last_minute_watched");

                    b.ToTable("movie", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Serie", b =>
                {
                    b.HasBaseType("Ulbraflix.domain.entities.Title");

                    b.ToTable("serie", (string)null);
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Category", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Title", null)
                        .WithMany("Categories")
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Episode", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Season", null)
                        .WithMany("Episode")
                        .HasForeignKey("SeasonId");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Season", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Serie", null)
                        .WithMany("Season")
                        .HasForeignKey("SerieId");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Subscription", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Title", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ulbraflix.domain.entities.WatchHistory", null)
                        .WithMany("Titles")
                        .HasForeignKey("WatchHistoryId");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.UserProfile", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Subscription", null)
                        .WithMany("UsersProfiles")
                        .HasForeignKey("SubscriptionId");

                    b.HasOne("Ulbraflix.domain.entities.WatchHistory", "WatchHistory")
                        .WithMany()
                        .HasForeignKey("WatchHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WatchHistory");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Movie", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Title", null)
                        .WithOne()
                        .HasForeignKey("Ulbraflix.domain.entities.Movie", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Serie", b =>
                {
                    b.HasOne("Ulbraflix.domain.entities.Title", null)
                        .WithOne()
                        .HasForeignKey("Ulbraflix.domain.entities.Serie", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Season", b =>
                {
                    b.Navigation("Episode");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Subscription", b =>
                {
                    b.Navigation("UsersProfiles");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Title", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.WatchHistory", b =>
                {
                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Ulbraflix.domain.entities.Serie", b =>
                {
                    b.Navigation("Season");
                });
#pragma warning restore 612, 618
        }
    }
}
